{"version":3,"sources":["ItemTypes.js","Card.jsx","Flowchart.jsx","Sidebaritem.js","Sidebar.js","App.js","index.js"],"names":["style","border","padding","marginBottom","backgroundColor","cursor","Card","React","forwardRef","ref","text","isDragging","connectDragSource","connectDropTarget","elementRef","useRef","opacity","useImperativeHandle","getNode","current","DropTarget","ItemTypes","hover","props","monitor","component","node","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveCard","connect","dropTarget","DragSource","beginDrag","id","dragSource","paddingLeft","paddingTop","width","Flowchart","useState","cards","setCards","dragCard","update","$splice","map","card","i","key","Outer","styled","div","SidebarItem","type","bg","ports","properties","background","className","Sidepanel","Message","Sidebar","App","DndProvider","backend","Backend","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4565b904.chunk.js","sourcesContent":["export default {\n  CARD: 'card',\n}\n","import React, { useImperativeHandle, useRef } from 'react'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = React.forwardRef(\n  ({ text, isDragging, connectDragSource, connectDropTarget }, ref) => {\n    const elementRef = useRef(null)\n    connectDragSource(elementRef)\n    connectDropTarget(elementRef)\n    const opacity = isDragging ? 0 : 1\n    useImperativeHandle(ref, () => ({\n      getNode: () => elementRef.current,\n    }))\n    return (\n      <div ref={elementRef} style={{ ...style, opacity }}>\n        {text}\n      </div>\n    )\n  },\n)\nexport default DropTarget(\n  ItemTypes.CARD,\n  {\n    hover(props, monitor, component) {\n      if (!component) {\n        return null\n      }\n      // node = HTML Div element from imperative API\n      const node = component.getNode()\n      if (!node) {\n        return null\n      }\n      const dragIndex = monitor.getItem().index\n      const hoverIndex = props.index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = node.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      props.moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      monitor.getItem().index = hoverIndex\n    },\n  },\n  (connect) => ({\n    connectDropTarget: connect.dropTarget(),\n  }),\n)(\n  DragSource(\n    ItemTypes.CARD,\n    {\n      beginDrag: (props) => ({\n        id: props.id,\n        index: props.index,\n      }),\n    },\n    (connect, monitor) => ({\n      connectDragSource: connect.dragSource(),\n      isDragging: monitor.isDragging(),\n    }),\n  )(Card),\n)\n","import React, { useState } from 'react'\nimport Card from './Card'\nimport update from 'immutability-helper'\n\nconst style = {\n  paddingLeft:600,\n  paddingTop:50,\n  width: 400,\n}\n\nconst Flowchart = () => {\n  {\n    const [cards, setCards] = useState([\n      {\n        id: 1,\n        text: 'Write a cool JS library',\n      },\n      {\n        id: 2,\n        text: 'Make it generic enough',\n      },\n      {\n        id: 3,\n        text: 'Write README',\n      },\n      {\n        id: 4,\n        text: 'Create some examples',\n      },\n      {\n        id: 5,\n        text:\n          'Spam in Twitter and IRC to promote it (note that this element is taller than the others)',\n      },\n      {\n        id: 6,\n        text: '???',\n      },\n      {\n        id: 7,\n        text: 'PROFIT',\n      },\n    ])\n    const moveCard = (dragIndex, hoverIndex) => {\n      const dragCard = cards[dragIndex]\n      setCards(\n        update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        }),\n      )\n    }\n    return (\n      <div style={style}>\n        {cards.map((card, i) => (\n          <Card\n            key={card.id}\n            index={i}\n            id={card.id}\n            text={card.text}\n            moveCard={moveCard}\n          />\n        ))}\n      </div>\n    )\n  }\n}\nexport default Flowchart\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst Outer = styled.div`\n  background: #FFF;\n  width: 279px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex-direction: row;\n  margin: 8px 0 0 0;\n  box-sizing: border-box;\n  border: 1px solid #BAC2CA;\n  border-radius: 4px;\n  color: #606A72;\n  transition: background-color .25s ease-out,color .25s ease-out;\n  text-align: center;\n`\nexport const SidebarItem = ({ type, ports , properties , bg}) => {\n // console.log(faEnvelope)\n  return (\n    <Outer\n      style={{background: bg}}\n    //   draggable={true}\n    //   onDragStart={ (event) => {\n    //     event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ type, ports , properties }))\n    //   } }\n    >\n    <div className=\"icon-container\" >\n      {/* <FontAwesomeIcon \n        className=\"icon-bg\" \n        icon={faClock}\n      /> */}\n      {type}\n    </div>\n    </Outer>\n  )\n}","import * as React from 'react'\nimport styled from 'styled-components'\nimport { SidebarItem } from \"./Sidebaritem\" \n\nconst Sidepanel = styled.div`\n    position: fixed;\n    order: -1;\n    flex: 0 0 350px;\n    padding: 32px;\n    background: #FFF;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 40px;\n    font-family: proxima-nova,Lato,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n`\nconst Message = styled.div`\n    letter-spacing: .5px;\n    text-transform: uppercase;\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: 600;\n    color: #606A72;\n    margin: 32px 0 8px 0;\n`\n\nexport const Sidebar = () =>(\n    <Sidepanel>\n        <Message>\n            Actions\n        </Message>\n        <SidebarItem\n            bg=\"white\"\n            type=\"Email\"        \n        />\n        <SidebarItem\n            bg=\"white\"\n            type=\"Update Profile Property\"\n        />\n        <Message>\n            Timming\n        </Message>\n        <SidebarItem\n            bg=\"#ECF3F5\"\n            type=\"Time Delay\"\n            />\n        <Message>\n            Logic\n        </Message>\n        <SidebarItem\n            bg=\"#D9E0E7\"\n            type=\"Conditional split\"     \n        />\n        <SidebarItem\n            bg=\"#D9E0E7\"\n            type=\"Trigger Split\"\n            />\n    </Sidepanel>\n)","import React from 'react';\nimport Flowchart from './Flowchart'\nimport { DndProvider } from 'react-dnd'\nimport Backend from 'react-dnd-html5-backend'\nimport { Sidebar } from './Sidebar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidebar/>\n      <DndProvider backend={Backend} >\n        <Flowchart/>\n      </DndProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}